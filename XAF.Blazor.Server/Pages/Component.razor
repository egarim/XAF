@page "/tokenreceiver"
@using System.Web;
@using XAF.Blazor.Server.Services.TokenSettings;
@using System.Runtime.InteropServices
@using System.Security.Claims
@using DevExpress.Data.Filtering
@using DevExpress.ExpressApp
@using DevExpress.ExpressApp.Security.Authentication.Internal
@using DevExpress.ExpressApp.Xpo
@using Microsoft.AspNetCore.Authentication
@using XAF.Module.BusinessObjects

<h3>Received ID Token:</h3>
<p>@IdToken</p>


@code {
    
    [Inject]
    private NavigationManager NavigationManager { get; set; }
    [Inject]
    private ITokenService TokenService { get; set; }
    [Inject] private IUserPayloadService _userPayloadService { get; set; }
    
    private string IdToken { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Get the URL fragment from the NavigationManager
        string urlFragment = NavigationManager.ToAbsoluteUri(NavigationManager.Uri).Fragment;

        // Parse the URL fragment and extract query parameters
        var queryParams = HttpUtility.ParseQueryString(urlFragment);
        
        if (!string.IsNullOrEmpty(queryParams["#error"]))
        {
            NavigationManager.NavigateTo("/Login2");
            return;
        }
        
        // Retrieve the ID token from the query parameters
        
        IdToken = queryParams["#id_token"];
        var result = TokenService.TokenDecoder(IdToken);
        _userPayloadService.SetUserDataPayload(result.Payload);
        NavigationManager.NavigateTo("/");
        
        //_contextAccessor.HttpContext.Response.Redirect("/test");
    }
    
}
